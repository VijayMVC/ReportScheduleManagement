@{
    if ((@Session["userID"] != null) && (@Convert.ToInt32(Session["userID"]) != 1) && (@Convert.ToInt32(Session["userID"]) != 2))
    {
        Response.Redirect("~/Home/Index");
    }
}

@model ReportScheduleInWeb.Models.UserViewModel

@{
    ViewBag.Title = "Управление пользователями";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var db = new ReportScheduleInWeb.Models.ReportScheduleEntities();
}

<div class="row align-items-center">
    <div class="col-6">
        <p class="display-4" style="color: #663333 !important">Управление пользователями</p>
    </div>
    <div class="col-6" style="text-align:right">
        <button class="btn btn-success" type="button" onclick="AddNewUser(0)">Добавить нового</button>
    </div>
</div>

<input type="hidden" id="busy_page" />

<table class="table table-bordered table-hover table-striped table-light table-sm">
    <tr class="bg-secondary" style="text-align:center">
        <th scope="col" width="50%">
            ФИО
        </th>
        <th scope="col" width="10%">
            Логин
        </th>
        <th scope="col" width="20%">
            Email
        </th>
        <th scope="col" width="20%">
            Роли
        </th>
    </tr>
    <tbody class="table-wish" id="SetUserList">
        <tr id="LoadingStatus"></tr>
    </tbody>
</table>

<div class="modal fade" id="user_view" tabindex="-1" role="dialog" data-backdrop="static">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content bg-dark" id="mainContent">
            <div class="modal-header">
                <h4 class="modal-title text-white" id="user_view_title"></h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="form" style="width:auto" oninput="validateForm()">
                    <fieldset id="SubmitForm">
                        @Html.HiddenFor(m => m.user_id, new { @id = "UseId" })
                        <div class="form-group input-group-sm" id="line_login">
                            @Html.EditorFor(model => model.user_login, new { htmlAttributes = new { @class = "form-control", placeholder = "Логин", @required = true, style = "max-width:100%" } })
                            <span id="error-userview-login" class="field-validation-error"></span>
                        </div>
                        <div class="form-group input-group-sm" id="line_password">
                            @Html.EditorFor(model => model.user_password, new { htmlAttributes = new { @class = "form-control password", placeholder = "Пароль", @required = true } })
                            <span id="error-userview-password" class="field-validation-error"></span>
                        </div>
                        <div class="form-group input-group-sm" id="line_password_confirm">
                            @Html.EditorFor(model => model.user_password_confirm, new { htmlAttributes = new { @class = "form-control", placeholder = "Повтор пароля", @required = true } })
                            <span id="error-userview-password-confirm" class="field-validation-error"></span>
                        </div>
                        <div class="form-group input-group-sm" id="line_surname">
                            @Html.EditorFor(model => model.user_surname, new { htmlAttributes = new { @class = "form-control", placeholder = "Фамилия", @required = true, style = "max-width:100%" } })
                            <span id="error-userview-surname" class="field-validation-error"></span>
                        </div>
                        <div class="form-group input-group-sm" id="line_name">
                            @Html.EditorFor(model => model.user_name, new { htmlAttributes = new { @class = "form-control", placeholder = "Имя", @required = true, style = "max-width:100%" } })
                            <span id="error-userview-name" class="field-validation-error"></span>
                        </div>
                        <div class="form-group input-group-sm" id="line_patronmymic">
                            @Html.EditorFor(model => model.user_patronymic, new { htmlAttributes = new { @class = "form-control", placeholder = "Отчество - необязательно", style = "max-width:100%" } })
                            <span id="error-userview-patronymic" class="field-validation-error"></span>
                        </div>
                        <div class="form-group input-group-sm" id="line_email">
                            @Html.EditorFor(model => model.user_email, new { htmlAttributes = new { type = "email", @class = "form-control", placeholder = "Электроная почта", @required = true, style = "max-width:100%" } })
                            <span id="error-userview-email" class="field-validation-error"></span>
                        </div>
                        <div class="form-group input-group-sm" id="changepassword">
                            <a href="#" class="btn btn-outline-info font-weight-light btn-sm" id="linkchangepassword" style="display:block">Изменить пароль</a>
                        </div>
                        <div class="form-group input-group-sm" id="line_isdeleted">
                            <div class="custom-control custom-switch">
                                <input type="checkbox" class="custom-control-input" id="customSwitch">
                                <label class="custom-control-label text-white" for="customSwitch">- Удален</label>
                            </div>
                        </div>
                        <div class="form-group input-group-sm" id="line_roles">
                            <div class="container-fluid px-0">
                                <div class="row">
                                    <div class="col-md-2">
                                        <span class="bg-dark text-white">Роли:</span>
                                    </div>
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.roles, new SelectList(db.Roles.ToList(), "role_id", "role_name"), new { @class = "form-control chosen-select chosen-select-roles", @multiple = "true" })
                                    </div>
                                </div>
                            </div>
                            <span id="error-userview-roles" class="field-validation-error"></span>
                        </div>
                        <div class="form-group  input-group-sm mb-0" id="line_reports">
                            <div class="container-fluid px-0">
                                <div class="row">
                                    <div class="col-md-2">
                                        <span class="bg-dark text-white">Отчеты:</span>
                                    </div>
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.report_types, new SelectList(from rt in db.Report_types join rgr in db.Report_group_relation on rt.report_type_id equals rgr.rgr_report_id join rg in db.Report_groups on rgr.rgr_report_group_id equals rg.report_group_id select new { Report_type_id = rt.report_type_id, Report_type_name = rt.report_type_name, Report_group_name = rg.report_group_name }, "report_type_id", "report_type_name", "report_group_name", 1), new { @class = "form-control chosen-select chosen-select-report_types", @multiple = "true" })
                                    </div>
                                </div>
                            </div>
                            <span id="error-userview-reports" class="field-validation-error"></span>
                        </div>
                    </fieldset>
                </form>
            </div>

            <div class="modal-footer">
                <div class="form-group mb-0" id="line_actions">
                    <button class="btn btn-outline-danger btn-sm" data-dismiss="modal">Отмена</button>
                    <input class="btn btn-outline-success btn-sm" type="submit" value="Сохранить" id="SaveUserRecord" />
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
<script>
    $(".chosen-select").chosen({
        width: "100%",
        no_results_text: "Ничего не найдено",
        placeholder_text_multiple: "Не выбрано",
        search_contains: true,
        display_disabled_options: false,
        display_selected_options: false,
        max_shown_results: Infinity
    });

    $(document).ready(function () {
        $("#SetUserList").empty();
        $("#SetUserList").append('<tr> <td colspan="4">Загрузка...</td></tr>');

        var url = mainURL + "/User/GetUserList";

        $.ajax({
            type: "GET",
            url: url,
            success: function (UserList) {
                var SetData = $("#SetUserList");
                SetData.empty();
                if (UserList.length == 0) {
                    var Data = "<tr class='font-italic font-weight-light'> <td colspan='4'>Нет ни одного пользователя</td></tr>";
                    SetData.append(Data);
                }
                else {
                    for (var i = 0; i < UserList.length; i++) {
                        var Data = "<tr onclick='GetUserByID(" + UserList[i].user_id + ")'>" +
                            "<td>" + UserList[i].user_FIO + "</td>" +
                            "<td style='text-align: center;'>" + UserList[i].user_login + "</td>" +
                            "<td style='text-align: center;'>" + UserList[i].user_email + "</td>" +
                            "<td style='text-align: center;'>" + UserList[i].user_roles + "</td>";

                        Data += "</tr>";
                        SetData.append(Data);
                    }
                }
            }
        })
    });

    function AddNewUser(UserId) {
        var url = mainURL + "/User/GetUserById?UserId=" + UserId;
        $("#form")[0].reset();
        $("#UseId").val(0);
        $("#user_view_title").html("Добавить нового пользователя");
        document.getElementById('error-userview-login').innerHTML = "";
        document.getElementById('error-userview-surname').innerHTML = "";
        document.getElementById('error-userview-name').innerHTML = "";
        document.getElementById('error-userview-email').innerHTML = "";
        document.getElementById('error-userview-password').innerHTML = "";
        document.getElementById('error-userview-password-confirm').innerHTML = "";
        document.getElementById('error-userview-roles').innerHTML = "";
        document.getElementById('error-userview-reports').innerHTML = "";
        $("#user_view").modal();
        $.ajax({
            type: "GET",
            url: url,
            success: function (data) {
                var obj = JSON.parse(data);
                $("#line_password").show();
                $("#line_password_confirm").show();
                $("#changepassword").hide();
                $(".chosen-select-roles").trigger('chosen:updated');
                $(".chosen-select-report_types").trigger('chosen:updated');
            }
        })
    }

    function GetUserByID(UserId) {
        var url = mainURL + "/User/GetUserById?UserId=" + UserId;
        $("#user_view_title").html("Редактирование пользователя");
        document.getElementById('error-userview-login').innerHTML = "";
        document.getElementById('error-userview-surname').innerHTML = "";
        document.getElementById('error-userview-name').innerHTML = "";
        document.getElementById('error-userview-email').innerHTML = "";
        document.getElementById('error-userview-password').innerHTML = "";
        document.getElementById('error-userview-password-confirm').innerHTML = "";
        document.getElementById('error-userview-roles').innerHTML = "";
        document.getElementById('error-userview-reports').innerHTML = "";
        $("#user_view").modal();
        $.ajax({
            type: "GET",
            url: url,
            success: function (data) {
                var obj = JSON.parse(data);
                $("#UseId").val(obj.user_id);
                $("#user_login").val(obj.user_login);
                $("#user_surname").val(obj.user_surname);
                $("#user_name").val(obj.user_name);
                $("#user_patronymic").val(obj.user_patronymic);
                $("#user_email").val(obj.user_email);
                $("#customSwitch").prop("checked", obj.user_isdeleted);
                $("#changepassword").show();
                $("#linkchangepassword").attr('onclick', "ChangePassword(" + UserId + ")");

                $("#roles").val("");
                if (obj.roles != null) {
                    $(".chosen-select-roles").val(obj.roles).trigger('chosen:updated');
                }

                $("#report_types").val("");
                if (obj.roles != null) {
                    $(".chosen-select-report_types").val(obj.report_types).trigger('chosen:updated');
                }

                $("#line_password").hide();
                $("#line_password_confirm").hide();
            }
        })
    }

    function validateEmail(email) {
        var re = /^(([^<>()[\]\\.,;:\s@@\"]+(\.[^<>()[\]\\.,;:\s@@\"]+)*)|(\".+\"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        return re.test(email);
    }

    function validateForm() {
	    var user_login = $("#user_login").val();
	    var user_surname = $("#user_surname").val();
	    var user_name = $("#user_name").val();
	    var user_email = $("#user_email").val();
	    var user_password = $("#user_password").val();
        var user_password_confirm = $("#user_password_confirm").val();
        var user_roles = $("#roles").val();

	    user_login.trim() == "" ? document.getElementById('error-userview-login').innerHTML = "Введите логин" : document.getElementById('error-userview-login').innerHTML = "";
	    user_surname.trim() == "" ? document.getElementById('error-userview-surname').innerHTML = "Введите фамилию" : document.getElementById('error-userview-surname').innerHTML = "";
        user_name.trim() == "" ? document.getElementById('error-userview-name').innerHTML = "Введите имя" : document.getElementById('error-userview-name').innerHTML = "";
        !validateEmail(user_email) ? document.getElementById('error-userview-email').innerHTML = "Некорректный email" : document.getElementById('error-userview-email').innerHTML = "";

        (document.getElementById('changepassword').style.display === 'none') && (user_password.trim() == "") ? document.getElementById('error-userview-password').innerHTML = "Введите пароль" : document.getElementById('error-userview-password').innerHTML = "";
        (document.getElementById('changepassword').style.display === 'none') && (user_password.trim() != user_password_confirm.trim()) ? document.getElementById('error-userview-password-confirm').innerHTML = "Пароли не совпадают" : document.getElementById('error-userview-password-confirm').innerHTML = "&nbsp";

        user_roles == "" ? document.getElementById('error-userview-roles').innerHTML = "Выберите роль" : document.getElementById('error-userview-roles').innerHTML = "";

        if (((document.getElementById('changepassword').style.display === 'none') && (user_password.trim() == "")) || (document.getElementById('changepassword').style.display === 'none') && (user_password.trim() != user_password_confirm.trim()))
            return false

	    if ((user_login.trim() == "") || (user_surname.trim() == "") || (user_name.trim() == "") || (!validateEmail(user_email)) || (user_roles == ""))
		    return false;

	    return true;
    }

    $("#roles").change(function () {
        var user_roles = $("#roles").val();
        user_roles == "" ? document.getElementById('error-userview-roles').innerHTML = "Выберите роль" : document.getElementById('error-userview-roles').innerHTML = "";
    })

    $("#SaveUserRecord").click(function () {
        if ($('#busy_page').val() == "false") {
            $('#busy_page').val("true");
            if (!validateForm()) {
                $('#busy_page').val("false");
                return false;
            }

            var data = $("#SubmitForm").serialize();

            var user_roles = $("#roles").val();
            $.each(user_roles, function (index, value) {
                data += '&user_roles=' + value.toString();
            });

            var checkBox = document.getElementById('customSwitch');
            if (checkBox.checked) {
                data += '&user_isdeleted=True'
            }
            else {
                data += '&user_isdeleted=False';
            }

            $("#customSwitch").checked ? data += '&user_isdeleted=True' : data += '&user_isdeleted=False';

            var report_types = $("#report_types").val();
            $.each(report_types, function (index, value) {
                data += '&report_types=' + value.toString();
            });

            data += '&report_types=0';

            $.ajax({
                type: "Post",
                data: data,
                url: mainURL + "/User/SaveDataInDatabase",
                success: function (result) {
                    $('#busy_page').val("false");
                    if (result == 1) {
                        alert("Произошла ошибка при сохранении данных!");
                        return false;
                    }
                    alert("Данные успешно сохранены!");
                    window.location.href = mainURL + "/User/Index";
                    $("#user_view").modal("hide");
                },
                error: function (xhr, status, p3) {
                    $('#busy_page').val("false");
                    alert(xhr.responseText);
                }
            })
        }
    })

    $("#MyModalChangePassword").on("hidden.bs.modal", function () {
        if ($('#user_view').hasClass('show'))
            $(document.body).addClass("modal-open");
    });

    window.onload = function () {
        $('#busy_page').val("false");
    }
</script>
}
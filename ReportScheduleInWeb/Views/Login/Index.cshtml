@model ReportScheduleInWeb.Models.LoginViewModel

@{
    Layout = null;

}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Авторизация - Планировщик отчетов АИС МФЦ</title>

    @Styles.Render("~/Content/login_css")
    <link rel="icon" href="~/content/mfc_love.png">
    <script src="~/Scripts/URL.js"></script>
</head>
<body>
    @Html.Hidden("action", (String)ViewBag.Action)
    <div class="container login-page">
        <div class="row">
            <div class="col-12">
                <div class="form">
                    <p> <h2 style="color:silver; padding-bottom:25px;">Планировщик отчетов</h2></p>
                    @using (Html.BeginForm("Authorize", "Login", FormMethod.Post, new { @class = "needs-validation form-authorize", @novalidate = true }))
                    {
                        <div class="form-group" id="login_field">
                            @Html.EditorFor(model => model.user_login, new { htmlAttributes = new { @class = "form-control", placeholder = "Логин", @required = true } })
                            <div class="invalid-feedback field-validation-error">
                                Введите логин
                            </div>
                        </div>

                        <div class="form-group" id="password_field">
                            @Html.EditorFor(model => model.user_password, new { htmlAttributes = new { @class = "form-control", placeholder = "Пароль", @required = true } })
                            <div class="invalid-feedback field-validation-error">
                                Введите пароль
                            </div>
                        </div>
                        <div class="form-group" id="validation_field">
                            <label class="field-validation-error">@Html.DisplayFor(model => model.LoginErrorMessage)</label>
                        </div>

                        <button class="btn btn-success btn-lg btn-block" type="submit">Вход</button>
                        <p class="message mt-3 mb-0">Не зарегистрированы? <a href="#">Создать новый аккаунт</a></p>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="register_window" tabindex="-1" role="dialog" data-backdrop="static">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content bg-dark" id="mainContent">
                <div class="modal-header">
                    <h4 class="modal-title text-white" id="ModalTitle">Регистрация</h4>
                    <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                @using (Html.BeginForm("Register", "Login", FormMethod.Post, new { @class = "needs-validation form-register", @novalidate = true, @oninput = "user_confirm_password.setCustomValidity(user_confirm_password.value != user_new_password.value ? 'Пароли не совпадают' : '')" }))
                {
                    <div class="modal-body">
                        <div class="form-group" id="login_field">
                            @Html.EditorFor(model => model.user_new_login, new { htmlAttributes = new { @class = "form-control", placeholder = "Логин", @required = true } })
                            <div class="invalid-feedback field-validation-error">
                                Введите логин
                            </div>
                        </div>

                        <div class="form-group" id="password_field">
                            @Html.EditorFor(model => model.user_new_password, new { htmlAttributes = new { @class = "form-control password", placeholder = "Пароль", @required = true } })
                            <div class="invalid-feedback field-validation-error">
                                Введите пароль
                            </div>
                        </div>

                        <div class="form-group" id="password_confirm_field">
                            @Html.EditorFor(model => model.user_confirm_password, new { htmlAttributes = new { @class = "form-control", placeholder = "Повтор пароля", @required = true } })
                            <div class="invalid-feedback field-validation-error">
                                Пароли не совпадают
                            </div>
                        </div>

                        <div class="form-group" id="surname_field">
                            @Html.EditorFor(model => model.user_surname, new { htmlAttributes = new { @class = "form-control", placeholder = "Фамилия", @required = true } })
                            <div class="invalid-feedback field-validation-error">
                                Введите фамилию
                            </div>
                        </div>

                        <div class="form-group" id="name_field">
                            @Html.EditorFor(model => model.user_name, new { htmlAttributes = new { @class = "form-control", placeholder = "Имя", @required = true } })
                            <div class="invalid-feedback field-validation-error">
                                Введите имя
                            </div>
                        </div>

                        <div class="form-group" id="patronymic_field">
                            @Html.EditorFor(model => model.user_patronymic, new { htmlAttributes = new { @class = "form-control", placeholder = "Отчество - необязательно" } })
                            <div class="invalid-feedback field-validation-error">
                                Введите отчество
                            </div>
                        </div>

                        <div class="form-group" id="email_field">
                            @Html.EditorFor(model => model.user_email, new { htmlAttributes = new { @class = "form-control", placeholder = "Email", @required = true } })
                            <div class="invalid-feedback field-validation-error">
                                Введите корректный адрес электронной почты
                            </div>
                        </div>

                        <div class="form-group" id="validation_field">
                            <label class="field-validation-error">@Html.DisplayFor(model => model.LoginErrorMessage)</label>
                        </div>

                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-success btn-lg btn-block" type="submit" name="commit">Зарегистрироваться</button>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="modal fade" id="registered_window" tabindex="-1" role="dialog" data-backdrop="static">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content bg-dark" id="mainContent">
                <div class="modal-header">
                    <h4 class="modal-title text-white">Подтверждение</h4>
                    <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <label class="text-warning h6">На указанный электронный адрес: отправлена ссылка для подверждения. Перейдите по ней, чтобы завершить регистрацию.</label>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="error_window" tabindex="-1" role="dialog" data-backdrop="static">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content bg-dark" id="mainContent">
                <div class="modal-header">
                    <h4 class="modal-title text-danger">Ошибка</h4>
                    <button type="button" class="close text-danger" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <label class="text-warning h6" id="error_text"></label>
                </div>
            </div>
        </div>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap")
    <script>
        (function () {
            'use strict';
            window.addEventListener('load', function () {
                // Fetch all the forms we want to apply custom Bootstrap validation styles to
                var forms = document.getElementsByClassName('needs-validation');
                // Loop over them and prevent submission
                var validation = Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();

        $('.message a').click(function () {
            $("#register_window").modal();
        });

        $("#register_window").on("hidden.bs.modal", function () {
            window.location.href = mainURL + "/Login/Index";
        });

        $("#registered_window").on("hidden.bs.modal", function () {
            window.location.href = mainURL + "/Login/Index";
        });

        $("#error_window").on("hidden.bs.modal", function () {
            window.location.href = mainURL + "/Login/Index";
        });

        window.onload = function () {
            switch ($("#action").val()) {
                case "Register":
                    $("#register_window").modal();
                    break;
                case "Registered":
                    $("#registered_window").modal();
                    break
                case "Login":
                    break
                default:
                    $("#error_window").modal();
                    document.getElementById('error_text').innerHTML = $("#action").val();
                    break
            }
        }

        $(document).ready(function () {
            $(".form-register").submit(function () {
                if (this.checkValidity()) {
                    $button = $(this).find("[type=submit]");
                    $button.html("<svg class=\"svg-icon\" viewBox=\"0 0 24 24\"><path d=\"M12.319,5.792L8.836,2.328C8.589,2.08,8.269,2.295,8.269,2.573v1.534C8.115,4.091,7.937,4.084,7.783,4.084c-2.592,0-4.7,2.097-4.7,4.676c0,1.749,0.968,3.337,2.528,4.146c0.352,0.194,0.651-0.257,0.424-0.529c-0.415-0.492-0.643-1.118-0.643-1.762c0-1.514,1.261-2.747,2.787-2.747c0.029,0,0.06,0,0.09,0.002v1.632c0,0.335,0.378,0.435,0.568,0.245l3.483-3.464C12.455,6.147,12.455,5.928,12.319,5.792 M8.938,8.67V7.554c0-0.411-0.528-0.377-0.781-0.377c-1.906,0-3.457,1.542-3.457,3.438c0,0.271,0.033,0.542,0.097,0.805C4.149,10.7,3.775,9.762,3.775,8.76c0-2.197,1.798-3.985,4.008-3.985c0.251,0,0.501,0.023,0.744,0.069c0.212,0.039,0.412-0.124,0.412-0.34v-1.1l2.646,2.633L8.938,8.67z M14.389,7.107c-0.34-0.18-0.662,0.244-0.424,0.529c0.416,0.493,0.644,1.118,0.644,1.762c0,1.515-1.272,2.747-2.798,2.747c-0.029,0-0.061,0-0.089-0.002v-1.631c0-0.354-0.382-0.419-0.558-0.246l-3.482,3.465c-0.136,0.136-0.136,0.355,0,0.49l3.482,3.465c0.189,0.186,0.568,0.096,0.568-0.245v-1.533c0.153,0.016,0.331,0.022,0.484,0.022c2.592,0,4.7-2.098,4.7-4.677C16.917,9.506,15.948,7.917,14.389,7.107 M12.217,15.238c-0.251,0-0.501-0.022-0.743-0.069c-0.212-0.039-0.411,0.125-0.411,0.341v1.101l-2.646-2.634l2.646-2.633v1.116c0,0.174,0.126,0.318,0.295,0.343c0.158,0.024,0.318,0.034,0.486,0.034c1.905,0,3.456-1.542,3.456-3.438c0-0.271-0.032-0.541-0.097-0.804c0.648,0.719,1.022,1.659,1.022,2.66C16.226,13.451,14.428,15.238,12.217,15.238\"></path></svg>&nbsp;Идет отправка...").prop("disabled", true);
                }
            });
        });

        $(document).ready(function () {
            $(".form-authorize").submit(function () {
                if (this.checkValidity()) {
                    $button = $(this).find("[type=submit]");
                    $button.html("<svg class=\"svg-icon\" viewBox=\"0 0 24 24\"><path d=\"M12.319,5.792L8.836,2.328C8.589,2.08,8.269,2.295,8.269,2.573v1.534C8.115,4.091,7.937,4.084,7.783,4.084c-2.592,0-4.7,2.097-4.7,4.676c0,1.749,0.968,3.337,2.528,4.146c0.352,0.194,0.651-0.257,0.424-0.529c-0.415-0.492-0.643-1.118-0.643-1.762c0-1.514,1.261-2.747,2.787-2.747c0.029,0,0.06,0,0.09,0.002v1.632c0,0.335,0.378,0.435,0.568,0.245l3.483-3.464C12.455,6.147,12.455,5.928,12.319,5.792 M8.938,8.67V7.554c0-0.411-0.528-0.377-0.781-0.377c-1.906,0-3.457,1.542-3.457,3.438c0,0.271,0.033,0.542,0.097,0.805C4.149,10.7,3.775,9.762,3.775,8.76c0-2.197,1.798-3.985,4.008-3.985c0.251,0,0.501,0.023,0.744,0.069c0.212,0.039,0.412-0.124,0.412-0.34v-1.1l2.646,2.633L8.938,8.67z M14.389,7.107c-0.34-0.18-0.662,0.244-0.424,0.529c0.416,0.493,0.644,1.118,0.644,1.762c0,1.515-1.272,2.747-2.798,2.747c-0.029,0-0.061,0-0.089-0.002v-1.631c0-0.354-0.382-0.419-0.558-0.246l-3.482,3.465c-0.136,0.136-0.136,0.355,0,0.49l3.482,3.465c0.189,0.186,0.568,0.096,0.568-0.245v-1.533c0.153,0.016,0.331,0.022,0.484,0.022c2.592,0,4.7-2.098,4.7-4.677C16.917,9.506,15.948,7.917,14.389,7.107 M12.217,15.238c-0.251,0-0.501-0.022-0.743-0.069c-0.212-0.039-0.411,0.125-0.411,0.341v1.101l-2.646-2.634l2.646-2.633v1.116c0,0.174,0.126,0.318,0.295,0.343c0.158,0.024,0.318,0.034,0.486,0.034c1.905,0,3.456-1.542,3.456-3.438c0-0.271-0.032-0.541-0.097-0.804c0.648,0.719,1.022,1.659,1.022,2.66C16.226,13.451,14.428,15.238,12.217,15.238\"></path></svg>&nbsp;Идет вход...").prop("disabled", true);
                }
            });
        });
    </script>
</body>
</html>
